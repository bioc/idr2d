% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auxiliary.R
\name{calculateRelativeOverlap}
\alias{calculateRelativeOverlap}
\title{Relative Anchor Overlap of two Interactions}
\usage{
calculateRelativeOverlap(int1.anchor.a.start, int1.anchor.a.end,
  int1.anchor.b.start, int1.anchor.b.end, int2.anchor.a.start,
  int2.anchor.a.end, int2.anchor.b.start, int2.anchor.b.end)
}
\arguments{
\item{int1.anchor.a.start}{integer vector; genomic start coordinate(s)
of anchor A in replicate 1 interaction}

\item{int1.anchor.a.end}{integer vector; genomic end coordinate(s)
of anchor A in replicate 1 interaction}

\item{int1.anchor.b.start}{integer vector; genomic start coordinate(s)
of anchor B in replicate 1 interaction}

\item{int1.anchor.b.end}{integer vector; genomic end coordinate(s)
of anchor B in replicate 1 interaction}

\item{int2.anchor.a.start}{integer vector; genomic start coordinate(s)
of anchor A in replicate 2 interaction}

\item{int2.anchor.a.end}{integer vector; genomic end coordinate(s)
of anchor A in replicate 2 interaction}

\item{int2.anchor.b.start}{integer vector; genomic start coordinate(s)
of anchor B in replicate 2 interaction}

\item{int2.anchor.b.end}{integer vector; genomic end coordinate(s)
of anchor B in replicate 2 interaction}
}
\value{
numeric vector; relative overlaps between interaction pairs
}
\description{
Calculates the overlap between anchor A of interaction 1 and anchor
A of interaction 2, as well as anchor B of interaction 1 and anchor B of
interaction 2. The overlap (in nucleotides) is then normalized by the length
of the anchors.

Note: anchors A and B of the same interaction have to be on the same
chromosome; start coordinate is always less than end coordinate
}
\examples{
# 100\% overlap
calculateRelativeOverlap(100, 120, 240, 260,
                         100, 120, 240, 260)

# 50\% overlap
calculateRelativeOverlap(100, 120, 240, 250,
                         100, 110, 240, 260)

# negative overlap
calculateRelativeOverlap(100, 120, 240, 250,
                         130, 140, 260, 280)

# larger negative overlap
calculateRelativeOverlap(100, 120, 240, 250,
                         200, 220, 340, 350)

# vectorized example
calculateRelativeOverlap(c(100, 100, 100, 100),
                         c(120, 120, 120, 120),
                         c(240, 240, 240, 240),
                         c(260, 250, 250, 250),
                         c(100, 100, 130, 200),
                         c(120, 110, 140, 220),
                         c(240, 240, 260, 340),
                         c(260, 260, 280, 350))
}
